# Copyright 2021 Piotr Tutak

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Hadoop Update
  hosts: hadoop
  vars:
    app_dir: "{{ inventory_dir }}/hadoop"
    JAVA_HOME: /etc/alternatives/jre_1.8.0_openjdk
  vars_files:
    - "{{ inventory_dir }}/common/credentials/passwd.yml"
    - "{{ inventory_dir }}/common/variables/common.yml"
    - "{{ app_dir }}/variables/hadoop.yml"
  environment:
    JAVA_HOME: "{{ JAVA_HOME }}"
    HADOOP_HOME: "{{ HADOOP_HOME }}"
    # HADOOP_YARN_JARS: "{{ HADOOP_YARN_JARS }}"
    HADOOP_DATANODE_DIR: "{{ HADOOP_DATANODE_DIR }}"
    HADOOP_NAMENODE_DIR: "{{ HADOOP_NAMENODE_DIR }}"
  tasks:

    - name: Copy safemode script
      copy:
        src: "{{ app_dir }}/config_files/scripts/wait-for-safemode.sh"
        dest: "{{ HADOOP_HOME }}/sbin/wait-for-safemode.sh"
        owner: hadoop
        group: hadoop
        mode: '0755'

    - name: Copy configuration core-site.xml
      template:
        src: "{{ app_dir }}/config_files/core-site.xml.j2"
        dest: /opt/hadoop/etc/hadoop/core-site.xml
        owner: hadoop
        group: hadoop
        mode: '0644'

    - name: Copy configuration hadoop-env.sh
      template:
        src: "{{ app_dir }}/config_files/hadoop-env.sh.j2"
        dest: /opt/hadoop/etc/hadoop/hadoop-env.sh
        owner: hadoop
        group: hadoop
        mode: '0644'

    - name: Copy configuration hdfs-site.xml
      template:
        src: "{{ app_dir }}/config_files/hdfs-site.xml.j2"
        dest: /opt/hadoop/etc/hadoop/hdfs-site.xml
        owner: hadoop
        group: hadoop
        mode: '0644'

    - name: Copy configuration mapred-site.xml
      template:
        src: "{{ app_dir }}/config_files/mapred-site.xml.j2"
        dest: /opt/hadoop/etc/hadoop/mapred-site.xml
        owner: hadoop
        group: hadoop
        mode: '0644'

    - name: Copy configuration yarn-site.xml
      template:
        src: "{{ app_dir }}/config_files/yarn-site.xml.j2"
        dest: /opt/hadoop/etc/hadoop/yarn-site.xml
        owner: hadoop
        group: hadoop
        mode: '0644'

    - name: Copy worker configuration
      template:
        src: "{{ app_dir }}/config_files/workers.j2"
        dest: /opt/hadoop/etc/hadoop/workers
        owner: hadoop
        group: hadoop
        mode: '0644'

    - name: Allow firewall ports
      ansible.posix.firewalld:
        port: "{{ item }}"
        permanent: yes
        state: enabled
      loop: "{{ HADOOP_PORTS }}"

    - name: Restart firewall
      systemd:
        name: firewalld
        state: reloaded

    - name: Copy hdfs service file
      when: ansible_host == HADOOP_NAMENODE_MASTER
      run_once: true
      template:
        src: "{{ app_dir }}/config_files/hdfs.service.j2"
        dest: /usr/lib/systemd/system/hdfs.service

    - name: Copy yarn service file
      when: ansible_host == HADOOP_NAMENODE_MASTER
      run_once: true
      template:
        src: "{{ app_dir }}/config_files/yarn.service.j2"
        dest: /usr/lib/systemd/system/yarn.service

    - name: Reload deamon
      when: ansible_host == HADOOP_NAMENODE_MASTER
      run_once: true
      systemd:
        daemon_reload: yes

    - name: Restart hdfs.service
      when: ansible_host == HADOOP_NAMENODE_MASTER
      run_once: true
      systemd:
        name: hdfs
        state: restarted
        enabled: yes

    - name: Update HDFS file system
      when: ansible_host == HADOOP_NAMENODE_MASTER
      become_user: hadoop
      run_once: true
      script:
        cmd: "{{ app_dir }}/config_files/scripts/update.sh"

    - name: Restart yarn.service
      when: ansible_host == HADOOP_NAMENODE_MASTER
      run_once: true
      systemd:
        name: yarn
        state: restarted
        enabled: yes
